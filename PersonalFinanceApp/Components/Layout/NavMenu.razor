@using Microsoft.EntityFrameworkCore
@using PersonalFinanceApp.Data
@using Microsoft.AspNetCore.Components.Authorization;
@rendermode InteractiveServer
@inject IJSRuntime JSRuntime
@inject NavigationManager UriHelper
@inject AppDbContext DbContext
@inject AuthenticationStateProvider AuthStateProvider

<header class="navbar">
</header>

<nav class="nav-menu @NavMenuCssClass">
    @if (!IsUserLoggedIn)
    {
        <NavLink class="nav-item" href="/" Match="NavLinkMatch.All">
            <i class="bi bi-house-door-fill"></i> Home
        </NavLink>
    }

    @if (IsUserLoggedIn)
    {
        <NavLink class="nav-item" href="/dashboard">
            <i class="bi bi-speedometer2"></i> Dashboard
        </NavLink>

        <NavLink class="nav-item" @onclick="Logout">
            <i class="bi bi-box-arrow-right"></i> Logout
        </NavLink>
    }
    else
    {
        <NavLink class="nav-item" href="/register">
            <i class="bi bi-person-plus-fill"></i> Register
        </NavLink>

        <NavLink class="nav-item" href="/login">
            <i class="bi bi-box-arrow-in-right"></i> Login
        </NavLink>
    }
</nav>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private bool IsUserLoggedIn { get; set; } = false;

    private string userName;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await CheckUserLoginStatus();
    }

    private async Task CheckUserLoginStatus()
    {
        userName = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "userName");
        IsUserLoggedIn = !string.IsNullOrEmpty(userName);
        StateHasChanged();
    }

    private async Task Logout()
    {
        await JSRuntime.InvokeVoidAsync("localStorage.removeItem", "userName");
        await ((Authentication)AuthStateProvider).MarkUserAsLoggedOut();
        UriHelper.NavigateTo("/login", forceLoad: true);
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
