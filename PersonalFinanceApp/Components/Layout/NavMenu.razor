@using Microsoft.EntityFrameworkCore
@using PersonalFinanceApp.Data
@rendermode InteractiveServer
@inject IJSRuntime JSRuntime
@inject NavigationManager UriHelper
@inject AppDbContext DbContext

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">PersonalFinanceApp</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        @if (IsUserLoggedIn)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/dashboard">
                    <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Dashboard
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" @onclick="Logout">
                    <span class="bi bi-box-arrow-right" aria-hidden="true"></span> Logout
                </NavLink>
            </div>
        }
        else
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/register">
                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Register
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/login">
                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Login
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private bool IsUserLoggedIn { get; set; }

    private string userName;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await CheckUserLoginStatus();
        }
    }

    private async Task CheckUserLoginStatus()
    {
        userName = await JSRuntime.InvokeAsync<string>("sessionStorage.getItem", "userName");
        IsUserLoggedIn = !string.IsNullOrEmpty(userName);
    }

    private async Task Logout()
    {
        await JSRuntime.InvokeVoidAsync("sessionStorage.removeItem", "userName");
        UriHelper.NavigateTo("/login");
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
